name: "testing"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
    qa:
        name: Quality assurance
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Cache Composer packages
              id: composer-cache
              uses: actions/cache@v2
              with:
                path: vendor
                key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                  ${{ runner.os }}-php-

            - name: Install dependencies
              if: steps.composer-cache.outputs.cache-hit != 'true'
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Coding Standard
              run: composer run-script cs

    tests:
        name: Tests
        runs-on: ubuntu-latest

        strategy:
            matrix:
              php:
                - 7.2
                - 7.3
                - 7.4
                - 8.0
              composer-args:
              include:
                - php: 7.3
                  composer-args: --prefer-lowest
                - php: 8.0
                  composer-args: --ignore-platform-reqs
            fail-fast: false

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}

            - name: Cache PHP dependencies
              uses: actions/cache@v2
              with:
                  path: vendor
                  key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest ${{ matrix.composer-args }}

            - name: Tests
              run: composer test

    # tests-code-coverage:
    #     name: "Tests with code coverage"
    #     runs-on: "${{ matrix.operating-system }}"

    #     strategy:
    #         matrix:
    #             php-version: [ "7.4" ]
    #             operating-system: [ "ubuntu-latest" ]
    #         fail-fast: false

    #     if: "github.event_name == 'push'"

    #     steps:
    #         - name: "Checkout"
    #           uses: "actions/checkout@v2"

    #         - name: "Setup PHP cache environment"
    #           id: "extcache"
    #           uses: "shivammathur/cache-extensions@v1"
    #           with:
    #               php-version: "${{ matrix.php-version }}"
    #               extensions: "${{ env.extensions }}"
    #               key: "${{ env.cache-version }}"

    #         - name: "Cache PHP extensions"
    #           uses: "actions/cache@v2"
    #           with:
    #               path: "${{ steps.extcache.outputs.dir }}"
    #               key: "${{ steps.extcache.outputs.key }}"
    #               restore-keys: "${{ steps.extcache.outputs.key }}"

    #         - name: "Install PHP"
    #           uses: "shivammathur/setup-php@v2"
    #           with:
    #               php-version: "${{ matrix.php-version }}"
    #               extensions: "${{ env.extensions }}"
    #               tools: "composer:${{ env.composer-version }}"

    #         - name: "Setup problem matchers for PHP"
    #           run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

    #         - name: "Get Composer cache directory"
    #           id: "composercache"
    #           run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

    #         - name: "Cache PHP dependencies"
    #           uses: "actions/cache@v2"
    #           with:
    #               path: "${{ steps.composercache.outputs.dir }}"
    #               key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
    #               restore-keys: "${{ runner.os }}-composer-"

    #         - name: "Install dependencies"
    #           run: "${{ env.composer-install }}"

    #         - name: "Tests"
    #           run: "composer coverage"

#            - name: "Coveralls.io"
#              env:
#                  CI_NAME: github
#                  CI: true
#                  COVERALLS_REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#              run: |
#                  wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.4.2/php-coveralls.phar
#                  php php-coveralls.phar --verbose --config tests/.coveralls.yml
